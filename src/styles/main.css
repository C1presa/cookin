/* src/styles/main.css */
:root {
  --color-bg-primary: #0a0e1a;
  --color-bg-secondary: #141923;
  --color-bg-card: #1e2530;
  --color-bg-hover: #252d3a;
  --color-border: #2a3441;
  --color-text-primary: #e4e6eb;
  --color-text-secondary: #b0b3b8;
  --color-accent-p1: #ff4757;
  --color-accent-p2: #3742fa;
  --color-accent-success: #2ed573;
  --color-accent-warning: #ffa502;
  --color-mana: #00d2d3;
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.2);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.4);
  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.5);
  
  /* Fixed dimensions */
  --board-tile-size: 80px;
  --card-width: 100px;
  --card-height: 140px;
  --sidebar-width: 280px;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  height: 100%;
  overflow: hidden;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background-color: var(--color-bg-primary);
  color: var(--color-text-primary);
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#app {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  position: relative;
}

/* Loading Screen */
.loading-screen {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: var(--color-bg-primary);
  z-index: 9999;
}

.loading-spinner {
  width: 60px;
  height: 60px;
  border: 3px solid var(--color-border);
  border-top-color: var(--color-accent-success);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 20px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Game Container - Modern Layout */
.game-container {
  height: 100vh;
  display: flex;
  flex-direction: column;
  background: var(--color-bg-primary);
}

/* Game Header */
.game-header {
  background: var(--color-bg-secondary);
  border-bottom: 1px solid var(--color-border);
  padding: 0.75rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: var(--shadow-md);
  height: 60px;
  flex-shrink: 0;
}

.game-title {
  font-size: 1.25rem;
  font-weight: bold;
  background: linear-gradient(45deg, var(--color-accent-p1), var(--color-accent-p2));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 20px rgba(255, 71, 87, 0.3);
}

/* Game Content - Modern Layout */
.game-content {
  flex: 1;
  display: flex;
  gap: 1rem;
  padding: 1rem;
  overflow: hidden;
  height: calc(100vh - 60px);
}

/* Left Sidebar - Both Players Stats */
.game-sidebar {
  width: var(--sidebar-width);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex-shrink: 0;
}

/* Main Game Area */
.game-main {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  min-width: 0;
}

/* Turn Info Bar */
.turn-info {
  background: linear-gradient(135deg, 
    var(--color-bg-card) 0%, 
    var(--color-bg-secondary) 100%);
  border: 1px solid var(--color-border);
  position: relative;
  overflow: hidden;
}

.turn-info::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    var(--color-accent-warning) 50%, 
    transparent 100%);
  animation: turnIndicatorPulse 2s ease-in-out infinite;
}

@keyframes turnIndicatorPulse {
  0%, 100% { opacity: 0.3; transform: scaleX(0.8); }
  50% { opacity: 1; transform: scaleX(1); }
}

.turn-player {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--color-accent-warning);
}

.turn-phase {
  color: var(--color-text-secondary);
}

.turn-number {
  color: var(--color-text-secondary);
  font-size: 0.875rem;
}

/* Game Board Container */
.board-container {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: 1rem 0;
}

/* Game Board - Fixed Size */
.game-board {
  background: var(--color-bg-secondary);
  border-radius: 12px;
  padding: 1rem;
  display: grid;
  grid-template-columns: repeat(7, var(--board-tile-size));
  grid-template-rows: repeat(5, var(--board-tile-size));
  gap: 0.5rem;
  box-shadow: var(--shadow-xl);
  width: fit-content;
  height: fit-content;
}

/* Board Tiles */
.board-tile {
  width: var(--board-tile-size);
  height: var(--board-tile-size);
  background: var(--color-bg-card);
  border: 2px solid var(--color-border);
  border-radius: 8px;
  position: relative;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.board-tile:hover {
  border-color: var(--color-accent-warning);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.board-tile.spawn-p1 {
  background: linear-gradient(135deg, var(--color-bg-card), rgba(255, 71, 87, 0.1));
  border-color: rgba(255, 71, 87, 0.3);
}

.board-tile.spawn-p2 {
  background: linear-gradient(135deg, var(--color-bg-card), rgba(55, 66, 250, 0.1));
  border-color: rgba(55, 66, 250, 0.3);
}

.board-tile.highlight-spawn {
  border-color: var(--color-accent-success);
  box-shadow: 0 0 0 3px rgba(46, 213, 115, 0.3);
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 3px rgba(46, 213, 115, 0.3); }
  50% { box-shadow: 0 0 0 6px rgba(46, 213, 115, 0.2); }
  100% { box-shadow: 0 0 0 3px rgba(46, 213, 115, 0.3); }
}

.board-tile.highlight-move {
  border-color: var(--color-accent-success);
  background: rgba(46, 213, 115, 0.1);
}

.board-tile.highlight-attack {
  border-color: var(--color-accent-p1);
  background: rgba(255, 71, 87, 0.1);
}

/* Player Hand - Fixed at Bottom */
.hand-container {
  width: 100%;
  max-width: 900px;
  height: 180px;
  flex-shrink: 0;
}

.player-hand {
  background: var(--color-bg-card);
  border-radius: 8px;
  padding: 1rem;
  box-shadow: var(--shadow-md);
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 1;
}

.card-container {
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  align-items: center;
  width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
  padding-bottom: 10px;
  pointer-events: auto;
  position: relative;
  z-index: 2;
}

.card-container::-webkit-scrollbar {
  height: 8px;
}

.card-container::-webkit-scrollbar-track {
  background: var(--color-bg-secondary);
  border-radius: 4px;
}

.card-container::-webkit-scrollbar-thumb {
  background: var(--color-border);
  border-radius: 4px;
}

/* Phase message overlay */
.phase-message {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--color-text-secondary);
  font-style: italic;
  font-size: 1rem;
  opacity: 0.8;
  pointer-events: none;
  text-align: center;
  z-index: 0;
  background: rgba(10, 14, 26, 0.8);
  padding: 0.5rem 1rem;
  border-radius: 8px;
  border: 1px solid var(--color-border);
}

/* Remove the ::after pseudo-element from non-interactive */
.player-hand.non-interactive::after {
  display: none;
}

/* Non-interactive state should only dim, not prevent pointer events on cards */
.player-hand.non-interactive .card-container {
  opacity: 0.6;
}

/* Ensure cards in play phase are interactive */
.player-hand:not(.non-interactive) .card.playable {
  pointer-events: auto !important;
  cursor: pointer !important;
}

/* Debug helper - shows current phase state */
.turn-info[data-phase]::after {
  content: "Phase: " attr(data-phase) " | Auto: " attr(data-auto-phase);
  position: absolute;
  bottom: -20px;
  left: 0;
  font-size: 0.7rem;
  color: var(--color-text-secondary);
  opacity: 0.5;
}

/* Ensure turn mana display is visible */
.turn-mana {
  color: var(--color-mana);
  font-weight: 600;
}

/* Card states remain the same but ensure pointer-events */
.card.playable {
  cursor: pointer;
  pointer-events: auto !important;
  box-shadow: 
    0 0 20px rgba(46, 213, 115, 0.3),
    0 4px 12px rgba(0, 0, 0, 0.4);
  border-color: var(--color-accent-success);
}

.card.unplayable {
  cursor: not-allowed;
  filter: grayscale(50%) brightness(0.7);
  opacity: 0.8;
  pointer-events: auto !important; /* Still allow hover for tooltip */
}

.card.disabled {
  cursor: not-allowed;
  filter: grayscale(80%) brightness(0.5);
  opacity: 0.6;
  pointer-events: none;
}

/* Player Stats */
.player-stats {
  background: var(--color-bg-card);
  border-radius: 8px;
  padding: 1rem;
  box-shadow: var(--shadow-md);
}

.player-stats h3 {
  font-size: 1rem;
  margin-bottom: 0.75rem;
  color: var(--color-accent-warning);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.player-stats.player-1 h3::before {
  content: '';
  width: 12px;
  height: 12px;
  background: var(--color-accent-p1);
  border-radius: 50%;
}

.player-stats.player-2 h3::before {
  content: '';
  width: 12px;
  height: 12px;
  background: var(--color-accent-p2);
  border-radius: 50%;
}

.stats {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.stat {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.stat-label {
  color: var(--color-text-secondary);
  font-size: 0.875rem;
}

.stat-value {
  font-weight: 600;
}

.stat-value.health {
  color: var(--color-accent-p1);
}

.stat-value.mana {
  color: var(--color-mana);
}

/* Game Log */
.game-log {
  background: var(--color-bg-card);
  border-radius: 8px;
  padding: 1rem;
  box-shadow: var(--shadow-md);
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 200px;
}

.game-log h4 {
  font-size: 0.875rem;
  margin-bottom: 0.75rem;
  color: var(--color-accent-warning);
}

.log-content {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  max-height: 300px;
}

.log-entry {
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  background: var(--color-bg-secondary);
  color: var(--color-text-secondary);
}

/* Units */
.unit {
  position: absolute;
  inset: 4px;
  background: var(--color-bg-secondary);
  border-radius: 6px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 2px solid transparent;
  box-shadow: var(--shadow-sm);
  z-index: 10;
}

.unit.player-1 {
  border-color: var(--color-accent-p1);
  box-shadow: 0 2px 8px rgba(255, 71, 87, 0.3);
}

.unit.player-2 {
  border-color: var(--color-accent-p2);
  box-shadow: 0 2px 8px rgba(55, 66, 250, 0.3);
}

.unit:hover {
  transform: scale(1.05);
  z-index: 10;
}

.unit.selected {
  transform: scale(1.1);
  box-shadow: 0 0 20px rgba(255, 165, 2, 0.5);
  border-color: var(--color-accent-warning);
}

.unit-icon {
  font-size: 2rem;
  margin-bottom: 0.25rem;
}

.unit-stats {
  display: flex;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: bold;
}

.unit-stats .attack {
  color: var(--color-accent-p1);
}

.unit-stats .health {
  color: var(--color-accent-success);
}

/* Cards */
.card {
  width: var(--card-width);
  height: var(--card-height);
  background: var(--color-bg-secondary);
  border: 2px solid var(--color-border);
  border-radius: 8px;
  padding: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  flex-direction: column;
  position: relative;
  flex-shrink: 0;
  box-shadow: var(--shadow-sm);
  z-index: 1;
}

.card:hover {
  transform: translateY(-10px);
  box-shadow: var(--shadow-lg);
  z-index: 10;
}

.card.selected {
  transform: translateY(-20px) scale(1.05);
  border-color: var(--color-accent-warning);
  box-shadow: 0 0 20px rgba(255, 165, 2, 0.4);
  z-index: 11;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.25rem;
}

.card-cost {
  width: 24px;
  height: 24px;
  background: var(--color-mana);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 0.875rem;
  color: var(--color-bg-primary);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.card-name {
  font-size: 0.75rem;
  font-weight: 600;
  text-align: center;
  flex: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.card-body {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
}

.card-icon {
  font-size: 2rem;
}

.card-description {
  font-size: 0.625rem;
  text-align: center;
  color: var(--color-text-secondary);
  line-height: 1.2;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}

.card-footer {
  display: flex;
  justify-content: space-between;
  font-weight: bold;
  font-size: 0.875rem;
}

.card-attack {
  color: var(--color-accent-p1);
}

.card-health {
  color: var(--color-accent-success);
}

/* Setup Phase Overlay */
.setup-overlay {
  position: fixed;
  inset: 0;
  background: rgba(10, 14, 26, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}

.setup-overlay.fade-out {
  opacity: 0;
  pointer-events: none;
}

.setup-content {
  background: var(--color-bg-secondary);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: var(--shadow-xl);
  text-align: center;
  animation: slideIn 0.3s ease-out;
  max-width: 90%;
  width: 400px;
}

@keyframes slideIn {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.setup-content h2 {
  color: var(--color-accent-warning);
  margin-bottom: 1rem;
  font-size: 1.5rem;
}

.setup-content p {
  color: var(--color-text-secondary);
  font-size: 1.125rem;
  margin-bottom: 0.5rem;
}

.setup-hint {
  color: var(--color-text-secondary);
  font-size: 0.875rem;
  opacity: 0.7;
  font-style: italic;
  margin-top: 1rem;
}
/* Buttons */
.btn {
  background: var(--color-bg-hover);
  border: 1px solid var(--color-border);
  color: var(--color-text-primary);
  padding: 0.5rem 1rem;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.2s ease;
  font-size: 0.875rem;
  font-family: inherit;
  position: relative;
  overflow: hidden;
}

.btn:hover:not(:disabled) {
  background: var(--color-border);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.btn-primary {
  background: var(--color-accent-success);
  border-color: var(--color-accent-success);
  color: var(--color-bg-primary);
}

.btn-primary:hover:not(:disabled) {
  background: #26c469;
  border-color: #26c469;
}

.btn-warning {
  background: var(--color-accent-warning);
  border-color: var(--color-accent-warning);
  color: var(--color-bg-primary);
  font-weight: 600;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  padding: 0.75rem 1.5rem;
  box-shadow: 
    0 0 20px rgba(255, 165, 2, 0.3),
    0 4px 12px rgba(0, 0, 0, 0.2);
}

.btn-warning:hover:not(:disabled) {
  background: #ffb700;
  border-color: #ffb700;
  transform: translateY(-2px);
  box-shadow: 
    0 0 30px rgba(255, 165, 2, 0.5),
    0 8px 20px rgba(0, 0, 0, 0.3);
}

.btn-warning::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: 0.5s;
}

.btn-warning:hover::before {
  left: 100%;
}

.btn-menu {
  background: transparent;
  border-color: var(--color-accent-p1);
  color: var(--color-accent-p1);
}

.btn-menu:hover {
  background: var(--color-accent-p1);
  color: var(--color-text-primary);
}

/* Modal */
.modal-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  backdrop-filter: blur(4px);
}

.modal-content {
  background: var(--color-bg-card);
  border-radius: 12px;
  padding: 2rem;
  max-width: 400px;
  width: 90%;
  text-align: center;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
}

.modal-content h2 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: var(--color-accent-warning);
}

.modal-content p {
  color: var(--color-text-secondary);
  margin-bottom: 1.5rem;
}

/* Loading screen fade out */
.loading-screen.fade-out {
  opacity: 0;
  transition: opacity 0.5s ease;
}

/* Card Hover Preview */
.card-hover-preview {
  background: var(--color-bg-secondary) !important;
  border: 2px solid var(--color-accent-warning) !important;
  color: var(--color-text-primary);
}

.preview-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.preview-name {
  font-size: 1.25rem;
  font-weight: bold;
  margin: 0;
}

.preview-cost {
  width: 32px;
  height: 32px;
  background: var(--color-mana);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  color: var(--color-bg-primary);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Particle Container */
.particle-container {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 999;
}

.particle-container canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Empty states */
.empty-hand {
  color: var(--color-text-secondary);
  font-style: italic;
}

/* Non-interactive states */
.non-interactive {
  opacity: 0.6;
  pointer-events: none;
}

.card.disabled {
  cursor: not-allowed;
  filter: grayscale(80%) brightness(0.5);
  opacity: 0.6;
}

.card.unplayable {
  cursor: not-allowed;
  filter: grayscale(50%) brightness(0.7);
  opacity: 0.8;
}

.card.unplayable:hover {
  transform: none;
  box-shadow: var(--shadow-sm);
}

.card.playable {
  cursor: pointer;
  box-shadow: 
    0 0 20px rgba(46, 213, 115, 0.3),
    0 4px 12px rgba(0, 0, 0, 0.4);
  border-color: var(--color-accent-success);
}

.card.playable:hover {
  transform: translateY(-15px) scale(1.05);
  box-shadow: 
    0 0 30px rgba(46, 213, 115, 0.5),
    0 8px 20px rgba(0, 0, 0, 0.5);
}

/* Mana cost visual states */
.card-cost.affordable {
  background: var(--color-mana);
  box-shadow: 0 0 10px rgba(0, 210, 211, 0.5);
  animation: manaGlow 2s ease-in-out infinite;
}

.card-cost.expensive {
  background: var(--color-bg-hover);
  color: var(--color-text-secondary);
  opacity: 0.7;
}

@keyframes manaGlow {
  0%, 100% { box-shadow: 0 0 10px rgba(0, 210, 211, 0.5); }
  50% { box-shadow: 0 0 20px rgba(0, 210, 211, 0.8); }
}

/* Player stats damage animation */
.player-stats {
  position: relative;
  transition: background-color 0.3s ease;
}

.player-stats.damage-flash {
  animation: damageFlash 0.3s ease-out;
}

@keyframes damageFlash {
  0% { background-color: var(--color-bg-card); }
  50% { 
    background-color: rgba(255, 71, 87, 0.3);
    transform: scale(1.02);
  }
  100% { 
    background-color: var(--color-bg-card);
    transform: scale(1);
  }
}

/* Floating damage/heal numbers */
.floating-damage,
.floating-heal {
  position: absolute;
  font-size: 2rem;
  font-weight: bold;
  pointer-events: none;
  z-index: 100;
  animation: floatUp 1s ease-out forwards;
}

.floating-damage {
  color: var(--color-accent-p1);
  text-shadow: 
    2px 2px 0 #000,
    -2px -2px 0 #000,
    2px -2px 0 #000,
    -2px 2px 0 #000;
}

.floating-heal {
  color: var(--color-accent-success);
  text-shadow: 
    2px 2px 0 #000,
    -2px -2px 0 #000,
    2px -2px 0 #000,
    -2px 2px 0 #000;
}

@keyframes floatUp {
  0% {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(0.5);
  }
  20% {
    transform: translateX(-50%) translateY(-20px) scale(1.2);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(-60px) scale(1);
  }
}

/* Enhanced card hover states */
.card {
  transition: all 0.2s ease;
  position: relative;
  overflow: visible;
}

.card::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, 
    transparent,
    var(--color-accent-success),
    transparent
  );
  opacity: 0;
  z-index: -1;
  border-radius: 10px;
  transition: opacity 0.3s ease;
}

.card.playable::before {
  opacity: 0.5;
  animation: cardShine 3s linear infinite;
}

@keyframes cardShine {
  0% { transform: translateX(-100%) rotate(45deg); }
  100% { transform: translateX(100%) rotate(45deg); }
}

/* Improved hand layout for better visibility */
.player-hand {
  display: flex;
  gap: 0.75rem;
  padding: 1rem;
  align-items: center;
  justify-content: center;
  min-height: 180px;
  position: relative;
}

.player-hand.non-interactive {
  opacity: 0.6;
  pointer-events: none;
}

.player-hand.non-interactive::after {
  content: 'Waiting for Play Phase...';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--color-text-secondary);
  font-style: italic;
  font-size: 0.875rem;
  opacity: 0.7;
  pointer-events: none;
}

@media (max-width: 1024px) {
  :root {
    --board-tile-size: 60px;
    --sidebar-width: 200px;
    --card-width: 90px;
    --card-height: 130px;
  }
  
  .card-icon {
    font-size: 1.5rem;
  }
  
  .unit-icon {
    font-size: 1.5rem;
  }
}

/* Edge Browser Specific Fixes */
@supports (-ms-ime-align: auto) {
  .game-board {
    -ms-grid-columns: var(--board-tile-size) var(--board-tile-size) var(--board-tile-size) var(--board-tile-size) var(--board-tile-size) var(--board-tile-size) var(--board-tile-size);
    -ms-grid-rows: var(--board-tile-size) var(--board-tile-size) var(--board-tile-size) var(--board-tile-size) var(--board-tile-size);
  }
  
  .board-tile {
    display: -ms-flexbox;
    -ms-flex-align: center;
    -ms-flex-pack: center;
  }
}

/* Phase Indicator - Critical for player understanding */
.phase-indicator {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 100;
  background: linear-gradient(135deg, 
    rgba(20, 25, 35, 0.95) 0%, 
    rgba(30, 37, 48, 0.95) 100%);
  border: 2px solid var(--color-accent-warning);
  border-radius: 12px;
  padding: 2rem 3rem;
  box-shadow: 
    0 0 40px rgba(255, 165, 2, 0.3),
    0 10px 30px rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  display: none;
  align-items: center;
  justify-content: center;
}

.phase-indicator.fade-in {
  animation: phaseSlideIn 0.3s ease-out;
}

.phase-indicator.fade-out {
  animation: phaseSlideOut 0.3s ease-in;
}

@keyframes phaseSlideIn {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes phaseSlideOut {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
}

.phase-content {
  text-align: center;
}

.phase-name {
  font-size: 2rem;
  font-weight: bold;
  color: var(--color-accent-warning);
  margin: 0 0 0.5rem 0;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-shadow: 0 2px 10px rgba(255, 165, 2, 0.5);
}

.phase-description {
  font-size: 1.125rem;
  color: var(--color-text-secondary);
  margin: 0;
}

/* Kriper Overlay - First Turn Experience */
.kriper-overlay {
  position: fixed;
  inset: 0;
  background: radial-gradient(ellipse at center, 
    rgba(10, 14, 26, 0.85) 0%, 
    rgba(10, 14, 26, 0.95) 100%);
  display: flex;
  align-items: flex-start;
  justify-content: center;
  z-index: 200;
  backdrop-filter: blur(5px);
  padding-top: 100px;
  pointer-events: none; /* Make overlay non-blocking */
  transition: opacity 0.3s ease;
}

.kriper-overlay.fade-out {
  opacity: 0;
}

.kriper-content {
  background: linear-gradient(135deg, 
    var(--color-bg-secondary) 0%, 
    var(--color-bg-card) 100%);
  padding: 3rem;
  border-radius: 16px;
  box-shadow: 
    0 0 60px rgba(46, 213, 115, 0.2),
    0 20px 40px rgba(0, 0, 0, 0.6);
  text-align: center;
  max-width: 500px;
  border: 2px solid var(--color-accent-success);
  position: relative;
  overflow: hidden;
  pointer-events: auto; /* Make content clickable */
  cursor: pointer;
  transform: translateY(0);
  animation: slideDown 0.5s ease-out;
}

@keyframes slideDown {
  from {
    transform: translateY(-50px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.kriper-content::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, 
    rgba(46, 213, 115, 0.1) 0%, 
    transparent 70%);
  animation: rotate 20s linear infinite;
}

.kriper-content::after {
  content: 'Click to dismiss';
  position: absolute;
  bottom: 10px;
  right: 15px;
  font-size: 0.75rem;
  color: var(--color-text-secondary);
  opacity: 0.6;
  font-style: italic;
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.kriper-content h2 {
  color: var(--color-accent-success);
  margin-bottom: 1rem;
  font-size: 2rem;
  position: relative;
  z-index: 1;
}

.kriper-content p {
  color: var(--color-text-primary);
  font-size: 1.25rem;
  margin-bottom: 1.5rem;
  position: relative;
  z-index: 1;
}

.kriper-hint {
  color: var(--color-text-secondary);
  font-size: 1rem;
  font-style: italic;
  opacity: 0.8;
  position: relative;
  z-index: 1;
  animation: pulse 2s ease-in-out infinite;
}

/* Make spawn tiles extra visible during Kriper phase */
.board-tile.highlight-spawn {
  border-color: var(--color-accent-success);
  box-shadow: 
    0 0 0 3px rgba(46, 213, 115, 0.6),
    0 0 20px rgba(46, 213, 115, 0.4),
    inset 0 0 20px rgba(46, 213, 115, 0.2);
  animation: kriperPulse 1s infinite;
  cursor: pointer;
  z-index: 50;
}

@keyframes kriperPulse {
  0% { 
    box-shadow: 
      0 0 0 3px rgba(46, 213, 115, 0.6),
      0 0 20px rgba(46, 213, 115, 0.4),
      inset 0 0 20px rgba(46, 213, 115, 0.2);
    transform: scale(1);
  }
  50% { 
    box-shadow: 
      0 0 0 6px rgba(46, 213, 115, 0.8),
      0 0 30px rgba(46, 213, 115, 0.6),
      inset 0 0 30px rgba(46, 213, 115, 0.3);
    transform: scale(1.05);
  }
  100% { 
    box-shadow: 
      0 0 0 3px rgba(46, 213, 115, 0.6),
      0 0 20px rgba(46, 213, 115, 0.4),
      inset 0 0 20px rgba(46, 213, 115, 0.2);
    transform: scale(1);
  }
}

/* Attack range visualization */
.board-tile.highlight-attack {
  animation: attackPulse 1s ease-in-out infinite;
}

@keyframes attackPulse {
  0%, 100% {
    border-color: var(--color-accent-p1);
    box-shadow: 
      0 0 10px rgba(255, 71, 87, 0.5),
      inset 0 0 10px rgba(255, 71, 87, 0.2);
  }
  50% {
    border-color: #ff6b7a;
    box-shadow: 
      0 0 20px rgba(255, 71, 87, 0.8),
      inset 0 0 20px rgba(255, 71, 87, 0.3);
  }
}

/* Spawn tile attack indicator */
.board-tile.spawn-p1.highlight-attack,
.board-tile.spawn-p2.highlight-attack {
  background: linear-gradient(135deg, 
    rgba(255, 71, 87, 0.3) 0%, 
    rgba(255, 71, 87, 0.1) 100%);
  border-width: 3px;
}

/* Unit enhancements */
.unit {
  transition: all 0.2s ease;
  z-index: 10;
}

.unit.can-attack {
  animation: readyToAttack 2s ease-in-out infinite;
}

@keyframes readyToAttack {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.unit.attacking {
  animation: attackAnimation 0.4s ease-out;
}

@keyframes attackAnimation {
  0% { transform: scale(1) rotate(0deg); }
  25% { transform: scale(1.2) rotate(-5deg); }
  50% { transform: scale(1.1) rotate(5deg); }
  100% { transform: scale(1) rotate(0deg); }
}

/* Damage numbers */
.damage-number {
  position: absolute;
  font-size: 2rem;
  font-weight: bold;
  color: var(--color-accent-p1);
  text-shadow: 
    2px 2px 0 #000,
    -2px -2px 0 #000,
    2px -2px 0 #000,
    -2px 2px 0 #000;
  animation: damageFloat 1s ease-out forwards;
  pointer-events: none;
  z-index: 100;
}

@keyframes damageFloat {
  0% {
    opacity: 1;
    transform: translateY(0) scale(0.5);
  }
  20% {
    transform: translateY(-20px) scale(1.2);
  }
  100% {
    opacity: 0;
    transform: translateY(-60px) scale(1);
  }
}

/* Turn indicator improvements */
.turn-info {
  background: linear-gradient(135deg, 
    var(--color-bg-card) 0%, 
    var(--color-bg-secondary) 100%);
  border: 1px solid var(--color-border);
  position: relative;
  overflow: hidden;
}

.turn-info::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    var(--color-accent-warning) 50%, 
    transparent 100%);
  animation: turnIndicatorPulse 2s ease-in-out infinite;
}

@keyframes turnIndicatorPulse {
  0%, 100% { opacity: 0.3; transform: scaleX(0.8); }
  50% { opacity: 1; transform: scaleX(1); }
}

/* Player stats damage animation */
.player-stats.damage-flash {
  animation: damageFlash 0.3s ease-out;
}

@keyframes damageFlash {
  0%, 100% { background-color: var(--color-bg-card); }
  50% { background-color: rgba(255, 71, 87, 0.3); }
}

/* Phase-specific UI states */
.game-container[data-phase="DRAW"] .player-hand {
  opacity: 0.6;
  pointer-events: none;
}

.game-container[data-phase="ADVANCE"] .board-container {
  opacity: 0.8;
}

.game-container[data-phase="PLAY"] .player-hand {
  opacity: 1;
  pointer-events: auto;
}

.game-container[data-phase="BATTLE"] .game-board {
  box-shadow: 
    0 0 40px rgba(255, 71, 87, 0.2),
    0 10px 30px rgba(0, 0, 0, 0.8);
}

/* Responsive improvements */
@media (max-width: 1400px) {
  .phase-indicator {
    padding: 1.5rem 2rem;
  }
  
  .phase-name {
    font-size: 1.5rem;
  }
  
  .phase-description {
    font-size: 1rem;
  }
}

/* Final CSS fixes */

/* Ensure hand container doesn't block interactions */
.player-hand {
  position: relative;
  z-index: 1;
}

.player-hand.non-interactive {
  pointer-events: none;
}

/* But cards themselves should handle their own pointer events */
.card-container {
  pointer-events: auto;
  position: relative;
  z-index: 2;
}

/* Phase message should never block interactions */
.phase-message {
  pointer-events: none !important;
  z-index: 0;
}

/* Ensure playable cards are always interactive when not in non-interactive state */
.player-hand:not(.non-interactive) .card.playable {
  pointer-events: auto !important;
  cursor: pointer !important;
}

/* Debug helper - shows current phase state */
.turn-info[data-phase]::after {
  content: "Phase: " attr(data-phase) " | Auto: " attr(data-auto-phase);
  position: absolute;
  bottom: -20px;
  left: 0;
  font-size: 0.7rem;
  color: var(--color-text-secondary);
  opacity: 0.5;
}

/* Ensure turn mana display is visible */
.turn-mana {
  color: var(--color-mana);
  font-weight: 600;
}

/* Remove any blocking overlays during play phase */
.game-container[data-phase="PLAY"] .player-hand {
  opacity: 1 !important;
  pointer-events: auto !important;
}

.game-container[data-phase="PLAY"] .card-container {
  opacity: 1 !important;
}

/* Ensure cards have proper z-index hierarchy */
.card {
  position: relative;
  z-index: 1;
}

.card:hover {
  z-index: 10;
}

.card.selected {
  z-index: 11;
}

.unit.pushed {
  animation: pushAnimation 0.3s ease-out;
}

@keyframes pushAnimation {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.1);
    filter: brightness(1.2);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}